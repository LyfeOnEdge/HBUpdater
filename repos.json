{
    "homebrew": [
        {
            "software": "Homebrew Store",
            "store_equivalent": "appstore",
            "githubapi": "https://api.github.com/repos/vgmoose/hb-appstore/releases",
            "author": "vgmoose",
            "projectpage": "https://github.com/vgmoose/hb-appstore/releases",
            "description": "A graphical frontend to the get package manager for downloading and managing homebrew on video game consoles, such as the Nintendo Switch and Wii U. This is a replacement to the older Wii U Homebrew App Store.",
            "group": "tool",
            "install_subfolder": "switch/appstore",
            "pattern": [
                [
                    "appstore"
                ],
                ".nro"
            ],
            "license": "GPL3"
        },
        {
            "software": "Edizon",
            "store_equivalent": "Edizon",
            "githubapi": "https://api.github.com/repos/WerWolv/EdiZon/releases",
            "author": "WerWolv",
            "projectpage": "https://github.com/WerWolv/EdiZon",
            "description": "EdiZon consists of 3 different main functionalities. \n\n#Save file management. Extraction of game saves.\n - Injection of extracted game saves (Your own and your friends save files).\n - Uploading of savefiles directly to https://transfer.sh.\n - Batch extraction of all save files of all games on the system.\n\n#Save file editing\n - Easy to use, scriptable and easily expandable on-console save editing.\n   - Lua and Python script support.\n - Built-in save editor updater.\n\n#On-the-fly memory editing\n - Cheat Engine like RAM editing.\n - Freezing of values in RAM via Atmosph\u00e8re's cheat module.\n - Interface for loading, managing and updating Atmosph\u00e8re cheats.\n    \nAll packed into one easy to use and easy to install Homebrew.",
            "group": "save manager",
            "install_subfolder": null,
            "pattern": [
                [
                    "SD"
                ],
                ".zip"
            ],
            "license": "GPL2"
        },
        {
            "software": "Lockpick",
            "githubapi": "https://api.github.com/repos/shchmue/Lockpick/releases",
            "author": "shchmue",
            "projectpage": "https://github.com/shchmue/Lockpick/",
            "description": "Lockpick is a ground-up C++17 rewrite of homebrew key derivation software, namely kezplez-nx. It also dumps titlekeys. This will dump all keys through *_key_05 on firmwares below 6.2.0 and through *_key_06 on 6.2.0.\n\nDue to key generation changes introduced in 7.0.0, Lockpick is not able to dump keys ending in 07 at all. Furthermore, unfortunately the public method to dump tsec_root_key is only available on firmware 6.2.0 so 7.x consoles can only dump through keys ending in 05.",
            "group": "tool",
            "install_subfolder": "switch",
            "pattern": [
                [
                    "Lockpick"
                ],
                ".nro"
            ],
            "license": "GPL2"
        },
        {
            "software": "Gag-Order",
            "store_equivalent": "gagorder",
            "githubapi": "https://api.github.com/repos/Adubbz/Gag-Order/releases",
            "author": "Adubbz",
            "projectpage": "https://github.com/Adubbz/Gag-Order/",
            "description": "A homebrew application which patches the 'Supernag' on the Nintendo Switch.",
            "group": "tool",
            "install_subfolder": "switch",
            "pattern": [
                [
                    "gag-order"
                ],
                ".nro"
            ],
            "license": "n/a"
        },
        {
            "software": "JKSV",
            "store_equivalent": "jksv",
            "githubapi": "https://api.github.com/repos/J-D-K/JKSV/releases",
            "author": "J-D-K",
            "projectpage": "https://gbatemp.net/threads/release-jks-savemanager-homebrew-cia-save-manager.413143/",
            "description": "WIP Save manager for the Switch, JKSV on Switch started as a small project/port to test some things and get familiar with libnx. A list of what it currently can do:\n\n#Dump and restore save data.\n - This includes the ability to dump and restore to/from any location on SD by pressing minus and using the Advanced Mode.\n\n#Dump system save data\n - Pressing all four shoulder buttons at once will rescan and include the previously unlisted system saves.\n - Dumping this data is allowed, but writing back is not.\n\n#Open and explore bis storage partitions via the Extras menu\n - BIS Storage is opened inside a basic filebrowser. The partition's listing is on the left. Your SD is on the right.\n - Only copying to SD and file properties work on BIS partitions. Writing to and deleting are disabled for now.\n\n#Misc Extras:\n - NAND Dumping\n - Ability to remove downloaded firmware updates from NAND.\n - Terminating processes by ID. Allowing you to dump normally unopenable system archives.\n - Mount by System Save ID. Normally used when the terminated process makes JKSV unable to rescan titles without the Switch crashing.",
            "group": "save manager",
            "install_subfolder": "switch",
            "pattern": [
                [
                    "JKSV"
                ],
                ".nro"
            ],
            "license": "GPL2"
        },
        {
            "software": "NX-Shell",
            "store_equivalent": "NX-shell",
            "githubapi": "https://api.github.com/repos/joel16/NX-Shell/releases",
            "author": "joel16",
            "projectpage": "https://gbatemp.net/threads/nx-shell-multipurpose-file-manager-for-nintendo-switch.505332/",
            "description": "Work in progress port of 3DShell (Multi purpose file manager) to the Nintendo Switch.",
            "group": "tool",
            "install_subfolder": "switch/NX-Shell",
            "pattern": [
                [
                    "NX-Shell"
                ],
                ".nro"
            ],
            "license": "GPL3"
        },
        {
            "software": "NxThemesInstaller",
            "store_equivalent": "NXthemes_Installer",
            "githubapi": "https://api.github.com/repos/exelix11/SwitchThemeInjector/releases",
            "author": "exelix11",
            "projectpage": "https://gbatemp.net/download/nxthemes-installer.35408/",
            "description": "The Switch theme injector project is composed of three parts:\n\n - Switch theme injector (Windows app): An app to create and edit custom themes\n\n - NXThemes installer: An homebrew app that runs on the switch itself and can be used to install and manage themes.\n\n - Switch theme injector online (also called WebInjector): A port of the windows injector as a web app, it lacks some features like image to DDS conversion.\n\nThe main objective is to develop a complete toolset to create and install custom themes on the switch. As the console os doesn't implement custom themes natively most of this is done by patching system SZS files to get the desidered aspect.\n\nUnfortunately SZS files from the switch os contain copyrighted data so to make theme sharing legal the nxtheme format has been developed, it's 100% legal and works on every firmware, unless you're dealing with making your own patches and custom layouts you should only use nxtheme files.",
            "group": "tool",
            "install_subfolder": "switch/NXthemes_Installer",
            "pattern": [
                [
                    "NxThemesInstaller"
                ],
                ".nro"
            ],
            "license": "n/a"
        },
        {
            "software": "pplay",
            "store_equivalent": "pplay",
            "githubapi": "https://api.github.com/repos/Cpasjuste/pplay/releases",
            "author": "Cpasjuste",
            "projectpage": "https://gbatemp.net/threads/pplay-switch-video-player.526187/",
            "description": "pPlay is a video player for the Nintendo Switch. pPlay support most popular video formats, have subtitles (embedded ass) and http streaming support.",
            "group": "video player",
            "install_subfolder": "switch",
            "pattern": [
                [
                    "pplay"
                ],
                ".zip"
            ],
            "license": "n/a"
        },
        {
            "software": "SwitchIdent Console",
            "store_equivalent": "switchident-console",
            "githubapi": "https://api.github.com/repos/joel16/SwitchIdent/releases",
            "author": "joel16",
            "projectpage": "https://gbatemp.net/threads/switchident.504134/",
            "description": "This is yet another identity tool that is continuing the series of <device name here>ident. This tool allows users to get various bits of information from your Nintendo Switch device, hence the name 'ident' as in identifying your Nintendo Switch.",
            "group": "tool",
            "install_subfolder": "switch",
            "pattern": [
                [
                    "SwitchIdent_Console"
                ],
                ".nro"
            ],
            "license": "GPL3"
        },
        {
            "software": "SwitchIdent (GUI)",
            "store_equivalent": "switchident-GUI",
            "githubapi": "https://api.github.com/repos/joel16/SwitchIdent/releases",
            "author": "joel16",
            "projectpage": "https://gbatemp.net/threads/switchident.504134/",
            "description": "This is yet another identity tool that is continuing the series of <device name here>ident. This tool allows users to get various bits of information from your Nintendo Switch device, hence the name 'ident' as in identifying your Nintendo Switch.",
            "group": "tool",
            "install_subfolder": "switch",
            "pattern": [
                [
                    "SwitchIdent_GUI"
                ],
                ".nro"
            ],
            "license": "GPL3"
        },
        {
            "software": "Checkpoint",
            "store_equivalent": "Checkpoint",
            "githubapi": "https://api.github.com/repos/FlagBrew/Checkpoint/releases",
            "author": "FlagBrew",
            "projectpage": "https://gbatemp.net/threads/checkpoint-save-manager-released-for-nintendo-switch.503370/",
            "description": "A fast and simple homebrew save manager for 3DS and Switch written in C++.",
            "group": "save manager",
            "install_subfolder": "switch/Checkpoint",
            "pattern": [
                [
                    "Checkpoint"
                ],
                ".nro"
            ],
            "license": "GPL3"
        },
        {
            "software": "PyNX",
            "store_equivalent": "pynx",
            "githubapi": "https://api.github.com/repos/nx-python/PyNX/releases",
            "author": "elnardu",
            "projectpage": "https://gbatemp.net/threads/nx-python-create-python-homebrew-for-the-switch.499150/",
            "description": "nx-python is an ecosystem for developing and running Python homebrew applications on the Nintendo Switch. \n\nPyNX serves as the entry point to running Python apps on your Switch. It is a homebrew app that contains a port of the CPython interpreter and allows you to run Python applications from the Homebrew Menu. Just name your application main.py and place it next to the PyNX.nro, and it will be executed as soon as you launch PyNX from the Homebrew Menu. Currently, Python 3.5 is supported.",
            "group": "interpreter",
            "install_subfolder": "switch",
            "pattern": [
                [
                    "PyNX"
                ],
                ".zip"
            ],
            "license": "ISC License"
        },
        {
            "software": "ftpd",
            "store_equivalent": "ftpd",
            "githubapi": "https://api.github.com/repos/mtheall/ftpd/releases",
            "author": "mtheall, TuxSH",
            "projectpage": "https://github.com/mtheall/ftpd/",
            "description": "FTP Server for Switch",
            "group": "tool",
            "install_subfolder": "switch",
            "pattern": [
                [
                    "ftpd"
                ],
                ".nro"
            ],
            "license": "Public Domain"
        },
        {
            "software": "Brainfuck Interpreter",
            "store_equivalent": "brainfuck",
            "githubapi": "https://api.github.com/repos/TheKgg/switch-brainfuck/releases",
            "author": "TheKgg",
            "projectpage": "https://github.com/TheKgg/switch-brainfuck/releases",
            "description": "A brainfuck interpreter for the Nintendo Switch\n\n#Usage\n - Put a .bf file with code (only code, no comments) in either the root of your emulator's SD card or in the same folder as your .nro. It will be booted on start.\n \n - When it asks for input move the left joystick to select a number.\n\n#Compiling\n - Just install devkitPro using this guide, replace the source folder in your new project with the source folder here, and run make build in the same folder as the Makefile.",
            "group": "interpreter",
            "install_subfolder": "switch/brainfuck",
            "pattern": [
                [
                    "Brainfuck_Interpreter"
                ],
                ".nro"
            ]
        },
        {
            "software": "Argon-NX SD Files",
            "store_equivalent": "argon-nx",
            "githubapi": "https://api.github.com/repos/Guillem96/argon-nx/releases",
            "author": "Guillem96",
            "projectpage": "https://github.com/Guillem96/argon-nx/",
            "description": "#What Argon is?\n - Argon is a noble gas. \"Argon\" comes from Greek \"Argon\", neuter of \"argos\" meaning lazy , idle or inactive. Argon recieved this name because of its chemical inactivity.\n\n - Argon NX is an immutable payload which is injected to your Nintendo Switch via Fusee Gelee exploit.\n\n#Purpose\n - The purpose of Argon NX is to stay immutable, so you can always inject it, without caring about other payloads getting updated (Always use ArgonNX for TegraSmash, TegraGUI, TrinkedM0...).\n\n#How can it be immutable?\n - When Argon NX is injected, it automatically launches the payload.bin locacted at argon directory on your SD Card root.\n\n - If payload.bin is not present or VOLUME DOWN button is pressed on payload injection, Argon NX will list all payloads located at argon/payloads, and you will be able to select one of them to launch it.\n",
            "group": "loader",
            "install_subfolder": null,
            "pattern": [
                [
                    "sd-files"
                ],
                ".zip"
            ]
        },
        {
            "software": "Hekate",
            "githubapi": "https://api.github.com/repos/CTCaer/hekate/releases",
            "store_equivalent": "Hekate",
            "author": "CTCaer",
            "projectpage": "https://gbatemp.net/threads/rcm-payload-hekate-ctcaer-mod.502604/",
            "description": "Custom Nintendo Switch bootloader, firmware patcher, and more.\nThis version supports booting ALL current OS/CS CFW, Linux chainloading and payload tools.\nNo more SD card removals",
            "group": "loader",
            "install_subfolder": null,
            "pattern": [
                [
                    "hekate_ctcaer"
                ],
                ".zip"
            ]
        },
        {
            "software": "ComicNX",
            "githubapi": "https://api.github.com/repos/HookedBehemoth/ComicNX/releases",
            "store_equivalent": "ComicNX",
            "author": "HookedBehemoth",
            "projectpage": "https://github.com/HookedBehemoth/ComicNX",
            "description": "Shitty comic-browser for your Nintendo Switch.\n\nThis uses my [HookedBehemoth's] Plutonium fork because I don't need Audio + Web (- ~1MiB) and I rescale Image-Elements on reloading an Image.\n\nLicensing\n- This software is licensed under the terms of the GPLv2.\n\nCredits\n- switchbrew for the libnx project and the extensive documentation, research and tool development pertaining to the Nintendo Switch.\n- devkitPro for the devkitA64 toolchain and libnx support.\n- atlasnx for Swurl and some util methods\n- XorTroll for Plutonium\n    ",
            "group": "tool",
            "install_subfolder": "switch",
            "pattern": [
                [
                    "comic-browser",
                    "ComicNX"
                ],
                ".nro"
            ],
            "license": "GPL2"
        },
        {
            "software": "Homebrew Menu",
            "githubapi": "https://api.github.com/repos/switchbrew/nx-hbmenu/releases",
            "store_equivalent": "hbmenu",
            "author": "yellows8, plutoo",
            "projectpage": "https://github.com/switchbrew/nx-hbmenu/",
            "description": "Allows you to launch homebrew apps, hold 'r' and open the photo album to launch",
            "group": "tool",
            "install_subfolder": "",
            "pattern": [
                [
                    "nx-hbmenu"
                ],
                ".zip"
            ]
        },
        {
            "software": "Apollo",
            "githubapi": "https://api.github.com/repos/evo-brut3/Apollo/releases",
            "store_equivalent": "Apollo",
            "author": "evo-brut3",
            "projectpage": "https://gbatemp.net/threads/apollo-file-explorer-for-nintendo-switch.543080/",
            "description": "Apollo is a File Explorer Homebrew for the Nintendo Switch. Its goal is to be the most convenient and reliable method to manage console's files.\n\nApollo's current features are:\n-Graphical User Interface: Minimalist design which is based on default hbmenu and official home menu esthetic.\n-Selecting items: A simple but mandatory feature.\n-Copying files and directories: Before doing so, application checks whether user is trying to overwrite currently existing files or directories and then asks about overwriting them.\n-Recursive directory deletion: It allows for complete deletion of directories' content and obviously for file deletion.\n-Renaming files and directories: Speaks for itself.\n-Sorting items: Alphabetically or reversed.\n\nCredits:\ndevkitPro for providing toolchain.\nXorTroll for the amazing Plutonium which allowed Apollo to look like this and the Goldleaf which is a mine of knowledge.\nGilFerraz for his beautiful Miiverse UI concept which inspired me to create sidebar.\nLucas Lacerda for his Nintendo Switch UI Concept.\njaames for the nx-hbmenu mockup which helped me with the design.\nNintendo for security <3.\n",
            "group": "tool",
            "install_subfolder": "switch/Apollo",
            "pattern": [
                [
                    "Apollo"
                ],
                ".nro"
            ]
        },
        {
            "software": "lennytube",
            "githubapi": "https://api.github.com/repos/noirscape/lennytube/releases",
            "store_equivalent": "lennytube",
            "author": "noirscape",
            "projectpage": "https://gbatemp.net/threads/lennytube-homebrew-youtube-nro.545824/",
            "description": "Youtube on the Nintendo Switch.\n\nRationale\nThe YouTube title on the Switch is only usable if one is not banned, since the title in question logs in on Nintendo Network. Whilst it's possible to bypass this by patching the YouTube app, this is far from ideal as the resulting file is not allowed to be shared.\n\nThis application aims to circumvent that last problem by launching it's own WifiApplet, meaning no copyrighted data is ever involved.\n\nLimitations\nDesktop mode only (TV mode is inaccessible, Mobile doesn't play videos properly).\nWorks only from APPLICATION mode (it will display a warning and instructions how to do this if you're still running from APPLET).",
            "group": "video player",
            "install_subfolder": "switch",
            "pattern": [
                [
                    "lennytube"
                ],
                ".nro"
            ]
        },
        {
            "software": "fakenews-injector",
            "store_equivalent": "fakenews-injector",
            "githubapi": "https://api.github.com/repos/noahc3/fakenews-injector/releases",
            "author": "noahc3",
            "projectpage": "https://switch.homebrew.guide/hacking/nereba/pegascape",
            "description": "Simple homebrew to inject the \"Fake News\" save data for an easy browser entry point on Switch.\n\nKills BCAT, so reboot is required after use.\n\nTested on 1.0.0, 3.0.0, 4.0.1 and 4.1.0, works both in CFW and with hbl launched via PegaSwitch/PegaScape.",
            "group": "tool",
            "install_subfolder": "switch",
            "pattern": [
                [
                    "fakenews-injector"
                ],
                ".nro"
            ],
            "license": "GPL3"
        },
        {
            "software": "nxdumptool",
            "store_equivalent": "gcdumptool",
            "githubapi": "https://api.github.com/repos/DarkMatterCore/nxdumptool/releases",
            "author": "DarkMatterCore",
            "projectpage": "https://gbatemp.net/threads/nxdumptool-nintendo-switch-dump-tool.508343/",
            "description": "Nintendo Switch Game Card Dump Tool\nMain features:\n- Generates full Cartridge Image dumps (XCI) with optional certificate removal and optional trimming.\n- Generates installable Nintendo Submission Packages (NSP) from base applications, updates and DLCs stored in the inserted game card.\n- Compatible with multigame carts.\n- CRC32 checksum calculation for XCI/NSP dumps.\n- Full XCI dump verification using XML database from NSWDB.COM (NSWreleases.xml).XML database and in-app update via libcurl.\n- Precise HFS0 raw partition dumping, using the root HFS0 header from the game card.\n- HFS0 partition file data dumping.\n- HFS0 partition file browser with manual file dump support.\n- RomFS section file data dumping.\n- RomFS section file browser with manual file dump support.\n- Manual game card certificate dump.\n- Free SD card space checks in place.\n- File splitting support for all operations.\n- Game card metadata retrieval using NCM and NS services.\n- Dump speed calculation, ETA calculation and progress bar.\nCompatibility:\n- Doesn't work under 1.0.0, and probably never will. The application needs some IPC calls that are only available from 2.0.0 onwards.\n- Doesn't work under FW > 1.0.0 and < 4.0.0 if the application is launched using PegaSwitch. This is because PegaSwitch doesn't give full access permissions to the application. This is a known bug that's being looked into.\n- Works under SX OS v1.2 and later, but only is your Switch is on FW > 1.0.0.\n- When used with the inserted gamecard, the NSP dumping, ExeFS dumping/browsing and RomFS dumping/browsing capabilities depend entirely on the FW version the console is on. This is because the SPL services are used to decrypt the NCA key area directly without deriving for key area encryption keys. If the console is not updated to a FW version that supports the crypto/keyslot used by the inserted gamecard, these features will fail.\n- NSP dumping, ExeFS dumping/browsing and RomFS dumping/browsing capabilities for installed SD/eMMC require the \"sdmc:/switch/prod.keys\" file. Likewise, update NSP dumping from gamecards requires this file to be available. Use Lockpick_RCM to generate it.\n- If you go back to Horizon and get an error or black screen when trying to launch the inserted gamecard, just pull it out and re-insert it. No reboot needed. Any help on fixing this bug will be greatly appreciated.\n",
            "group": "tool",
            "install_subfolder": "switch/gcdumptool",
            "pattern": [
                [
                    "nxdumptool"
                ],
                ".nro"
            ],
            "license": "GPL2"
        }
    ],
    "emulators": [
        {
            "software": "VBA Next",
            "store_equivalent": "VBA_NEXT",
            "githubapi": "https://api.github.com/repos/RSDuck/vba-next-switch/releases",
            "author": "RSDuck",
            "projectpage": "https://gbatemp.net/threads/vba-next-for-switch-works-4-1.504947/",
            "description": "A VBA-M port for Nintendo Switch. It's based of the libretro port(the actual emulator) and 3DSGBA(the GUI, although heavily refactored).\n\nAfter porting 3DSGBA(which often crashed probably because of a huge amount of memory leaks), I tried porting mGBA which ran not so well. That's why I decided to experiment with a lighter less accurate emulator, which lead to this port.",
            "group": "emu",
            "install_subfolder": "switch/VBA_NEXT",
            "pattern": [
                [
                    "vba-next"
                ],
                ".zip"
            ],
            "license": "GPL2"
        },
        {
            "software": "CHIP8-NX",
            "store_equivalent": "CHIP8",
            "githubapi": "https://api.github.com/repos/Marice/CHIP8-NX/releases",
            "author": "Marice",
            "projectpage": "https://github.com/Marice/CHIP8-NX",
            "description": "A working early stage CHIP8 emulator for the Nintendo Switch.\\n\\nFeel free to help and improve the code!\\n\\nExit to HBmenu using PLUS button",
            "group": "emu",
            "install_subfolder": null,
            "pattern": [
                [
                    "CHIP8-NX"
                ],
                ".zip"
            ],
            "license": "Copyright"
        },
        {
            "software": "uae4all2",
            "store_equivalent": "uae4all2",
            "githubapi": "https://api.github.com/repos/rsn8887/uae4all2/releases",
            "author": "rsn8887",
            "projectpage": "https://github.com/rsn8887/uae4all2/",
            "description": "A fast and optimized Amiga Emulator",
            "group": "emu",
            "install_subfolder": "switch",
            "pattern": [
                [
                    "uae4all2"
                ],
                "switch.zip"
            ],
            "license": "GPL2"
        },
        {
            "software": "pFBA: final burn alpha",
            "store_equivalent": "pFBA",
            "githubapi": "https://api.github.com/repos/Cpasjuste/pemu/releases",
            "author": "Cpasjuste",
            "projectpage": "https://github.com/Cpasjuste/pemu",
            "description": "final burn alpha emulator",
            "group": "emu",
            "install_subfolder": "switch/pfba",
            "pattern": [
                [
                    "pfba"
                ],
                "switch.zip"
            ],
            "license": "n/a"
        },
        {
            "software": "pNES",
            "store_equivalent": "pNES",
            "githubapi": "https://api.github.com/repos/Cpasjuste/pemu/releases",
            "author": "Cpasjuste",
            "projectpage": "https://github.com/Cpasjuste/pemu",
            "description": "Portable NES Emulator",
            "group": "emu",
            "install_subfolder": "switch/pnes",
            "pattern": [
                [
                    "pnes"
                ],
                "switch.zip"
            ],
            "license": "n/a"
        },
        {
            "software": "pSNES",
            "store_equivalent": "psnes",
            "githubapi": "https://api.github.com/repos/Cpasjuste/pemu/releases",
            "author": "Cpasjuste",
            "projectpage": "https://github.com/Cpasjuste/pemu",
            "description": "Portable NES Emulator",
            "group": "emu",
            "install_subfolder": "switch/psnes",
            "pattern": [
                [
                    "psnes"
                ],
                "switch.zip"
            ],
            "license": "n/a"
        },
        {
            "software": "OpenBor",
            "store_equivalent": "openbor",
            "githubapi": "https://api.github.com/repos/Cpasjuste/openbor/releases",
            "author": "Cpasjuste",
            "projectpage": "https://github.com/Cpasjuste/openbor",
            "description": "OpenBOR is the ultimate 2D gaming engine with over 10+ years of active development behind it. With OpenBOR you can build anything from simple button mashers to elaborate projects rivaling the most lavish professional offerings. Download one of the dozens of ready to play game modules available here, or grab the development kit and start up one of your own!\\n\\n\\nPut your *.pak files in a Paks folder, inside OpenBOR.nro directory.\\n\\nOpenBOR official website: http://www.chronocrash.com/forum/",
            "group": "emu",
            "install_subfolder": "switch/openbor",
            "pattern": [
                [
                    "OpenBOR"
                ],
                ".nro"
            ],
            "license": "n/a"
        },
        {
            "software": "ScummVM",
            "store_equivalent": "scummvm",
            "githubapi": "https://api.github.com/repos/Cpasjuste/scummvm/releases",
            "author": "Cpasjuste",
            "projectpage": "https://github.com/Cpasjuste/scummvm/",
            "description": "Here is a port of the excellent ScummVM engine to the switch.\\n\\nKNOW BUGS\\nno sfx in some scumm engine games (curse of monkey island, full throttle) ! :(\\nintro in the secret of monkey island CD version hang, audio play fine and can be skipped. Other versions seems to works fine.\\nmp3 decoder doesn't seems to work (crash), but this format should not be used anyway.",
            "group": "emu",
            "install_subfolder": "switch",
            "pattern": [
                [
                    "scummvm_switch"
                ],
                ".zip"
            ],
            "license": "n/a"
        },
        {
            "software": "NoiES",
            "store_equivalent": "noies",
            "githubapi": "https://api.github.com/repos/Hydr8gon/NoiES/releases",
            "author": "Hydr8gon",
            "projectpage": "https://github.com/Hydr8gon/NoiES",
            "description": "A noice NES emulator",
            "group": "emu",
            "install_subfolder": null,
            "pattern": [
                [
                    "noies"
                ],
                "switch.zip"
            ],
            "license": "GPL3"
        },
        {
            "software": "melonDS",
            "store_equivalent": "melonDS",
            "githubapi": "https://api.github.com/repos/Hydr8gon/melonDS/releases",
            "author": "Hydr8gon",
            "projectpage": "https://github.com/Hydr8gon/melonDS/",
            "description": "DS emulator",
            "group": "emu",
            "install_subfolder": null,
            "pattern": [
                [
                    "melonds"
                ],
                ".zip"
            ],
            "license": "GPL3"
        },
        {
            "software": "DeSmuME-NX",
            "store_equivalent": "desmume",
            "githubapi": "https://api.github.com/repos/Laproxi/DeSmuME-NX/releases",
            "author": "Laproxi",
            "projectpage": "https://github.com/Laproxi/DeSmuME-NX",
            "description": "Play DS roms! (in sd:/switch/desmume/roms)",
            "group": "emu",
            "install_subfolder": "switch/desmume",
            "pattern": [
                [
                    "DeSmuME-NX"
                ],
                ".nro"
            ],
            "license": "GPL2"
        }
    ],
    "games": [
        {
            "software": "Meritous",
            "store_equivalent": "meritous",
            "githubapi": "https://api.github.com/repos/Nop90-Switch/Meritous-Switch/releases",
            "author": "Lancer-X, nop90",
            "projectpage": "https://gbatemp.net/threads/release-meritous-for-switch.498356/",
            "description": "Top View Dungeon Game",
            "group": "game",
            "install_subfolder": null,
            "pattern": [
                [
                    "Meritous"
                ],
                ".zip"
            ],
            "license": "n/a"
        },
        {
            "software": "eduke32",
            "store_equivalent": "eduke32",
            "githubapi": "https://api.github.com/repos/Cpasjuste/eduke32/releases",
            "author": "Cpasjuste",
            "projectpage": "https://gbatemp.net/threads/duke-nukem-3d.502386/",
            "description": "EDuke32 is an awesome, free homebrew game engine and source port of the classic PC first person shooter Duke Nukem 3D",
            "group": "game",
            "install_subfolder": "switch",
            "pattern": [
                [
                    "eduke32"
                ],
                ".zip"
            ],
            "license": "GPL2"
        },
        {
            "software": "InvadersNX",
            "store_equivalent": "InvadersNX",
            "githubapi": "https://api.github.com/repos/MaesterRowen/InvadersNX/releases",
            "author": "MaesterRowen",
            "projectpage": "https://gbatemp.net/threads/homebrew-space-game-nx.493643/",
            "description": "This is a port of a space invaders type game I wrote for the Xbox 360 homebrew scene. Initially, I was going to remove the Xbox 360 specific artwork, but then figured it sort of made sense to have the xbox boss be an \"Invader\" on the Nintendo Switch.\n\nThe project has always been a learning project so I hope others can get use out of the source code and are able to improve upon or learn from it.\n\nKnown Bugs: There appears to be some bug that causes the screen to flicker during transitions. I am not sure if that's a VSYNC issue with SDL2/libnx or something I am doing incorrectly.",
            "group": "game",
            "install_subfolder": "switch/InvadersNX",
            "pattern": [
                [
                    "InvadersNX"
                ],
                ".nro"
            ],
            "license": "n/a"
        },
        {
            "software": "Ken's Labyrinth",
            "store_equivalent": "Kens-Labyrinth",
            "githubapi": "https://api.github.com/repos/sacredbanana/lab3d-sdl/releases",
            "author": "sacredbanana",
            "projectpage": "https://gbatemp.net/threads/kens-labyrinth-enhanced-port-for-nintendo-switch.529434/",
            "description": "Classic MS-DOS shooter with enhanced features such as HD textures and 60fps support",
            "group": "game",
            "install_subfolder": "switch",
            "pattern": [
                [
                    "Kens-Labyrinth"
                ],
                ".zip"
            ],
            "license": "n/a"
        },
        {
            "software": "2048",
            "store_equivalent": "2048",
            "githubapi": "https://api.github.com/repos/BernardoGiordano/2048/releases",
            "author": "BernardoGiordano",
            "projectpage": "https://gbatemp.net/threads/release-2048-port-for-switch-homebrew.501678/",
            "description": "2048 port for Switch Homebrew",
            "group": "game",
            "install_subfolder": "switch",
            "pattern": [
                [
                    "2048"
                ],
                ".nro"
            ],
            "license": "n/a"
        },
        {
            "software": "OpenLara",
            "store_equivalent": "Openlara",
            "githubapi": "https://api.github.com/repos/XProger/OpenLara/releases",
            "author": "XProger",
            "projectpage": "https://github.com/XProger/OpenLara",
            "description": "Classic Tomb Raider open-source engine",
            "group": "game",
            "install_subfolder": "switch/OpenLara",
            "pattern": [
                [
                    "OpenLara_switch"
                ],
                ".zip"
            ],
            "license": "BSD v2"
        },
        {
            "software": "TicTacToeNX",
            "store_equivalent": "TicTacToeNX",
            "githubapi": "https://api.github.com/repos/lorrdfarquad/TikTacToeNX/releases",
            "author": "lorrdfarquad",
            "projectpage": "https://github.com/lorrdfarquad/TikTacToeNX",
            "description": "My version of tic tac toe ported to the nintendo switch.",
            "group": "game",
            "install_subfolder": "switch/TicTacToeNX",
            "pattern": [
                [
                    "TicTacToeNx"
                ],
                ".nro"
            ],
            "license": "n/a"
        },
        {
            "software": "MarioBrosNX",
            "store_equivalent": "MarioBrosNX",
            "githubapi": "https://api.github.com/repos/KranKRival/MarioBrosNX/releases",
            "author": "KranKRival",
            "projectpage": "https://gbatemp.net/threads/mariobrosnx-super-mario-bros-clone-for-the-nintendo-switch.546623/",
            "description": "MarioBrosNX C++/SDL2, Created by \u0141ukasz Jakowski 2014, Ported to the Nintendo Switch By Krank/KuranKu 2019\nAll ingame images and sound belong to its authors and none other, the right for mario bros title belongs to nintendo. \nthis game created for fun and love of the community.",
            "group": "game",
            "install_subfolder": null,
            "pattern": [
                [
                    "MarioBrosNX"
                ],
                ".zip"
            ],
            "license": "GPL2"
        },
        {
            "software": "Super Mario War NX",
            "store_equivalent": "supermariowar-nx",
            "githubapi": "https://api.github.com/repos/p-sam/supermariowar-nx/releases",
            "author": "p-sam",
            "projectpage": "https://github.com/p-sam/supermariowar-nx/releases",
            "description": "A port of Super Mario War to the Switch, using SDL2 and libnx.",
            "group": "game",
            "install_subfolder": "switch",
            "pattern": [
                [
                    "smw"
                ],
                ".zip"
            ],
            "license": "n/a"
        }
    ],
    "python": [
        {
            "software": "Generic Mod Manager",
            "githubapi": "https://api.github.com/repos/Genwald/Generic-Mod-Manager/releases",
            "author": "Genwald",
            "projectpage": "https://gbatemp.net/threads/generic-mod-manager-a-mod-manager.517626/",
            "description": "Generic Mod Manager is a simple mod manager written in python, for use with the homebrew PyNX. \nIt lets you easily activate and deactivate mods as well as handle conflicting mod files. Its mods folder and layeredFS folder can be set in the ModManager.ini in order to support multiple cfw's and user preferences.",
            "group": "tool",
            "install_subfolder": "switch\\PyNX",
            "pattern": [
                [
                    "Generic-Mod-Manager"
                ],
                ".py"
            ]
        },
        {
            "software": "timefix",
            "store_equivalent": "timefix",
            "githubapi": "https://api.github.com/repos/LyfeOnEdge/timefix/releases",
            "author": "Retr0id",
            "projectpage": "https://github.com/LyfeOnEdge/timefix",
            "description": "Fixes the 'can't initialize time' bug with PyNX, this will set your system clock to something incorrect, you may want to adjust it afterwards.\nSource code by Retr0id.",
            "group": "tool",
            "install_subfolder": "switch/timefix",
            "pattern": [
                [
                    "timefix"
                ],
                ".nro"
            ],
            "license": null
        },
        {
            "software": "PyNX",
            "store_equivalent": "pynx",
            "githubapi": "https://api.github.com/repos/nx-python/PyNX/releases",
            "author": "elnardu",
            "projectpage": "https://gbatemp.net/threads/nx-python-create-python-homebrew-for-the-switch.499150/",
            "description": "nx-python is an ecosystem for developing and running Python homebrew applications on the Nintendo Switch. \n\nPyNX serves as the entry point to running Python apps on your Switch. It is a homebrew app that contains a port of the CPython interpreter and allows you to run Python applications from the Homebrew Menu. Just name your application main.py and place it next to the PyNX.nro, and it will be executed as soon as you launch PyNX from the Homebrew Menu. Currently, Python 3.5 is supported.",
            "group": "interpreter",
            "install_subfolder": "switch",
            "pattern": [
                [
                    "PyNX"
                ],
                ".zip"
            ],
            "license": "ISC License"
        }
    ],
    "nut": {
        "software": "Nut Server",
        "githubapi": "https://api.github.com/repos/blawar/nut/releases",
        "author": "blawar",
        "projectpage": "https://gbatemp.net/threads/nut.515530/",
        "description": "Nut server for installing title backups",
        "group": "SPECIAL",
        "dependencies": [
            "colorama",
            "pyopenssl",
            "requests",
            "tqdm",
            "unidecode",
            "image",
            "bs4",
            "urllib3",
            "flask",
            "pyqt5"
        ]
    },
    "fluffy": {
        "software": "Fluffy",
        "githubapi": "https://api.github.com/repos/fourminute/Fluffy/releases",
        "author": "Fluffy",
        "projectpage": "https://gbatemp.net/threads/fluffy-a-tinfoil-and-goldleaf-gui.528930/",
        "description": "Fluffy server for installing title backups",
        "group": "SPECIAL",
        "dependencies": [
            "pyusb",
            "pyqt5",
            "libusb",
            "libusb1",
            "qdarkstyle",
            "configparser"
        ]
    },
    "cfw": [
        {
            "software": "Atmos",
            "githubapi": "https://api.github.com/repos/Atmosphere-NX/Atmosphere/releases",
            "author": "Atmosphere-NX",
            "projectpage": "https://github.com/Atmosphere-NX/Atmosphere/releases",
            "description": "Atmosph\u00e8re is a customized firmware for the Nintendo Switch.",
            "group": "CFW",
            "install_subfolder": null,
            "license": null,
            "pattern": [
                [
                    "atmosphere"
                ],
                ".zip"
            ]
        },
        {
            "software": "Kosmos",
            "githubapi": "https://api.github.com/repos/AtlasNX/Kosmos/releases",
            "author": "AtlasNX",
            "projectpage": "https://github.com/AtlasNX/Kosmos/releases",
            "description": "All-in-One CFW Package for the Nintendo Switch - previously SDFilesSwitch",
            "group": "CFW",
            "install_subfolder": null,
            "pattern": [
                [
                    "kosmos",
                    "sdfiles"
                ],
                ".zip"
            ]
        },
        {
            "software": "ReiNX",
            "githubapi": "https://api.github.com/repos/Reisyukaku/ReiNX/releases",
            "author": "Reisyukaku",
            "projectpage": "https://github.com/Reisyukaku/ReiNX",
            "description": "A modular Switch custom firmware",
            "group": "CFW",
            "install_subfolder": null,
            "pattern": [
                [
                    "reinx"
                ],
                ".zip"
            ]
        }
    ],
    "payloads": [
        {
            "software": "Hekate",
            "githubapi": "https://api.github.com/repos/CTCaer/hekate/releases",
            "author": "CTCaer",
            "projectpage": "https://gbatemp.net/threads/rcm-payload-hekate-ctcaer-mod.502604/",
            "description": "Custom Nintendo Switch bootloader, firmware patcher, and more.\nThis version supports booting ALL current OS/CS CFW, Linux chainloading and payload tools.\nNo more SD card removals",
            "group": "PAYLOADS",
            "zip_items": [
                [
                    "hekate_ctcaer"
                ],
                ".bin"
            ],
            "pattern": [
                [
                    "hekate_ctcaer"
                ],
                ".zip"
            ]
        },
        {
            "software": "fusee-primary",
            "githubapi": "https://api.github.com/repos/Atmosphere-NX/Atmosphere/releases",
            "author": "Atmosphere-NX",
            "projectpage": "https://github.com/Atmosphere-NX/Atmosphere/tree/master/fusee/fusee-primary",
            "description": "Bootloader for Atmosphere",
            "group": "PAYLOADS",
            "pattern": [
                [
                    "fusee-primary"
                ],
                ".bin"
            ]
        },
        {
            "software": "Argon-NX payload",
            "githubapi": "https://api.github.com/repos/Guillem96/argon-nx/releases",
            "author": "Guillem96",
            "projectpage": "https://gbatemp.net/threads/argon-nx-payload-chainloader.527178/",
            "description": "#What Argon is?\n - Argon is a noble gas. \"Argon\" comes from Greek \"Argon\", neuter of \"argos\" meaning lazy , idle or inactive. Argon recieved this name because of its chemical inactivity.\n\n - Argon NX is an immutable payload which is injected to your Nintendo Switch via Fusee Gelee exploit.\n\n#Purpose\n - The purpose of Argon NX is to stay immutable, so you can always inject it, without caring about other payloads getting updated (Always use ArgonNX for TegraSmash, TegraGUI, TrinkedM0...).\n\n#How can it be immutable?\n - When Argon NX is injected, it automatically launches the payload.bin locacted at argon directory on your SD Card root.\n\n - If payload.bin is not present or VOLUME DOWN button is pressed on payload injection, Argon NX will list all payloads located at argon/payloads, and you will be able to select one of them to launch it.\n",
            "group": "PAYLOADS",
            "pattern": [
                [
                    "argon-nx"
                ],
                ".bin"
            ]
        },
        {
            "software": "Lockpick RCM",
            "githubapi": "https://api.github.com/repos/shchmue/Lockpick_RCM/releases",
            "github_asset": null,
            "author": "shchmue",
            "projectpage": "https://gbatemp.net/threads/lockpick-switch-key-derivation-homebrew.525575/",
            "description": "Lockpick_RCM is a bare metal Nintendo Switch payload that derives encryption keys for use in Switch file handling software like hactool, hactoolnet/LibHac, ChoiDujour, etc. without booting Horizon OS.\n\nDue to changes imposed by firmware 7.0.0, Lockpick homebrew can no longer derive the latest keys. In the boot-time environment however, there are fewer limitations.",
            "group": "PAYLOADS",
            "pattern": [
                [
                    "Lockpick_RCM"
                ],
                ".bin"
            ]
        }
    ],
    "fusee": [
        {
            "software": "fusee-launcher",
            "githubapi": "https://api.github.com/repos/Cease-and-DeSwitch/fusee-launcher/releases",
            "github_asset": "tarball_url",
            "author": "Qyriad",
            "projectpage": "https://gbatemp.net/threads/web-fusee-launcher.502423/",
            "description": "",
            "group": "SPECIAL",
            "install_subfolder": null
        }
    ]
}